language: python
# notifications:
#   irc:
#     channels:
#       - "irc.oftc.net#tor-bots"
#       - "irc.oftc.net#ooni"
#     on_success: always
#     on_failure: always
#   email:
#     recipients:
#       - isis@torproject.org
#       - aagbsn@torproject.org
#       - ioerror@torproject.org
#       - hellais@torproject.org
#     on_success: change
#     on_failure: always
before_install:
  - echo "deb http://deb.torproject.org/torproject.org wheezy main" | sudo tee -a /etc/apt/sources.list
  - gpg --keyserver keys.gnupg.net --recv 886DDD89
  - gpg --export A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89 | sudo apt-key add -
  - sudo apt-get update
  - sudo apt-get install deb.torproject.org-keyring tor tor-geoipdb build-essential python-dev python-setuptools openssl
python:
  #- "3.3"
  - "2.7"
install:
  - pip install -r requirements.txt
  - pip install coveralls
  - python setup.py install

script:

  # 1. prepare for running oonib
  - cp oonib.conf.example oonib.conf
  - openssl genrsa -des3 -passout pass:oonib -out private.key 4096
  - openssl req -batch -passin pass:oonib -new -key private.key -out server.csr
  - cp private.key private.key.org
  - openssl rsa -passin pass:oonib -in private.key.org -out private.key
  - openssl x509 -req -days 365 -in server.csr -signkey private.key -out certificate.crt
  - test -f "private.key.org" && rm -f private.key.org
  - test -f "server.csr" && rm -f server.csr

  # 2. smoke test oonib: does it startup, does it react to SIGTERM?
  - ./bin/oonib &
  # Notes on smoke testing
  # ----------------------
  #
  # 1. The original smoke testing procedure was much more robust but travis
  #    started segfaulting and, upon investigating that, it occurred to me
  #    that having a simplified procedure like the one below would also work.
  #
  #    Specifically, if the process does not exit after `TERM`, my understanding
  #    is that the build will hang until travis kills it. This would fail the
  #    build and so we would know that the deamon doesn't handle `TERM`.
  #
  # 2. I need to copy the pidfile because it is deleted by the daemon when
  #    it exits, as such, using the original pidfile is racy.
  - sleep 30
  - cp oonib.pid oonib-persist.pid
  - kill -TERM `cat oonib-persist.pid`
  - wait `cat oonib-persist.pid`

  # 3. run regress tests
  - $(which coverage) run $(which trial) oonib

after_success:
  - coveralls --rcfile=".coveragerc"
